{% extends 'base.html.twig' %}

{% block title %}Symfony ToDo{% endblock %}

{% block body %}
    <h1>A simple ToDo app</h1>
    <div>
        <h2>What you need ToDo:</h2>
        <ul id="read-todo">
            <!-- List of todos will be rendered here -->
        </ul>
    </div>
    <div>
        <button id="toggle-form">Add ToDo</button>
    </div>
    <div>
        <form id="create-todo" style="display: none;">
            <label for="title">Title:</label>
            <input type="text" id="title" name="title" required>
            <label for="description">Description:</label>
            <input type="text" id="description" name="description" required>
            <button type="submit">Submit</button>
        </form>
    </div>

    <script>
        // Toggle the visibility of the form
        const button = document.getElementById('toggle-form');
        button.addEventListener('click', function () {
            const form = document.getElementById('create-todo');
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        });
        // Fetch the list of todos from the API
        fetch('/api/todos')
            .then(response => response.json())
            .then(todos => {

                // Add each todo to the list
                todos.forEach(todo => {
                    renderTodo(todo);
                });
                
            })
            // Catch any errors and log them to the console
            .catch(error => {
                console.error('Error:', error);
            });

        // Get the form element
        const form = document.getElementById('create-todo');

        // Add an event listener to the form to create a new todo and prevent the default form submission
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            // Get the title and description values from the form and validate them
            const title = document.getElementById('title').value;
            if (!title.trim()) {
                alert('Title cannot be empty or whitespace only');
                return;
            }
            const description = document.getElementById('description').value;
            if (!description.trim()) {
                alert('Description cannot be empty or whitespace only');
                return;
            }

            // Send a POST request to the API with the new todo data
            fetch('/api/todos', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    title: title,
                    description: description,
                }),
            })
                .then(response => response.json())
                .then(todo => {
                    
                    // Add the new todo to the list
                    renderTodo(todo);
                    document.getElementById('title').value = '';
                    document.getElementById('description').value = '';
                    alert('You have new things to do!');
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });

        // Function to render a todo item in the list
        function renderTodo(todo) {
            const list = document.getElementById('read-todo');
            const item = document.createElement('li');
            const checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.checked = todo.completed;

            checkbox.addEventListener('change', function (event) {
                // Send a PATCH request to the API to update the todo status
                fetch(`/api/todos/${todo.id}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        completed: event.target.checked,
                    }),
                })
                    .then(response => response.json())
                    .catch(error => {
                        console.error('Error:', error);
                    });
            });

            // Append the checkbox, todo title and description to the list item
            item.appendChild(checkbox);
            item.append(` ${todo.title} - ${todo.description ?? ''}`);
            list.appendChild(item);
        }
    </script>
{% endblock %}

